{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","pushNewFilm","newFilm","addFilm","preventDefault","props","onAdd","this","onSubmit","htmlFor","id","onChange","placeholder","type","Component","App","moviesFromServer","addMovie","previousState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3289d659.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    title: '',\n    description: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  pushNewFilm = () => {\n    const {\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      title,\n      description,\n    } = this.state;\n    const newFilm = {\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      title,\n      description,\n    };\n\n    this.setState({\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      title: '',\n      description: '',\n    });\n\n    return newFilm;\n  }\n\n  addFilm = (event) => {\n    event.preventDefault();\n    this.props.onAdd(this.pushNewFilm());\n  }\n\n  render() {\n    const {\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      title,\n      description,\n    } = this.state;\n\n    return (\n      <form\n        className=\"movies__form\"\n        onSubmit={this.addFilm}\n      >\n        <label htmlFor=\"imgUrl\">\n          imgUrl\n        </label>\n        <input\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"imdbUrl\">\n          imdbUrl\n        </label>\n        <input\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"imdbId\">\n          imdbId\n        </label>\n        <input\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"title\">\n          Title\n        </label>\n        <input\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <textarea\n          placeholder=\"description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(previousState => ({\n      movies: [...previousState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}